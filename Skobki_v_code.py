"""Проверить, правильно ли расставлены скобки в данном коде. Вход. Исходный код программы.
 Выход. Проверить, верно ли расставлены скобки. Если нет, выдать индекс первой ошибки. 
 В случае, если скобки расставлены неправильно, редактор должен также сообщить пользователю первое место,
  где обнаружена ошибка. В первую очередь необходимо найти закрывающую скобку, для которой либо нет 
  соответствующей открывающей (например, скобка ] в строке “]()”), либо же она закрывает не соответствующую 
  ей открывающую скобку (пример: “()[}”). Если таких ошибок нет, необходимо найти первую открывающую скобку,
   для которой нет соответствующей закрывающей (пример: скобка ( в строке “{}([]”).  Помимо скобок, 
   исходный код может содержать символы латинского алфавита, цифры и знаки препинания. Формат входа.
    Строка s[1 . . . n], состоящая из заглавных и прописных букв латинского алфавита, цифр, 
    знаков препинания и скобок из множества []{}(). Формат выхода. Если скобки в s расставлены правильно,
     выведите строку “Success". В противном случае выведите индекс (используя индексацию с единицы) 
     первой закрывающей скобки, для которой нет соответствующей открывающей. Если такой нет, 
     выведите индекс первой открывающей скобки, для которой нет соответствующей закрывающей."""

string = input() # исходная строка, которую нужно проверить на правильность расстановки скобок
stek = [] # пустой стэк
dictionary_bracket=  {')': '(', '}': '{', ']': '['} # словарь, в котором перечислены все возможные скобки
count = 1 # номер скобки, который изначально равен 1

for i in range(len(string)):
    if string[i] in ('(', '{', '['):
        stek.append((string[i], count))

    elif string[i] in (')', '}', ']'):
        if len(stek) == 0:
            print(i + 1)
            break
        else:
            if stek[-1][0] == dictionary_bracket[string[i]]:
                stek.pop(-1)
            else:
                print(i + 1)
                break
    count += 1

else:
    if len(stek) == 0:
        print('Success')
    else:
        print(stek[-1][1])